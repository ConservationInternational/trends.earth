name: Create plugin package in the PR

on:
  pull_request:
    types: [edited, opened, reopened, synchronize]
    branches: [main]

jobs:
  create-package:
    runs-on: ubuntu-22.04
    container:
      image: qgis/qgis:release-3_34
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OS packages and configure git
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            git python3-venv unzip build-essential
          git config --global --add safe.directory /__w/trends.earth/trends.earth
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Create virtualenv and upgrade pip
        run: |
          python3 -m venv .venv
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
          .venv/bin/python -m pip --version
          .venv/bin/python -m pip install --upgrade pip setuptools wheel build

      - name: Install plugin dependencies
        env:
          PIP_ALWAYS_USE_PEP517: '1'
        run: |
          .venv/bin/pip install --no-cache-dir -r requirements-dev.txt
          .venv/bin/pip install --no-cache-dir -r requirements.txt

      - name: Verify te_algorithms import
        run: |
          python - <<'PY'
          import sys
          try:
              import te_algorithms
              print('te_algorithms imported, version:', getattr(te_algorithms, '__version__', 'unknown'))
          except Exception as e:
              print('Failed to import te_algorithms:', e)
              sys.exit(1)
          PY

      - name: Get unique identifier
        id: get-identifier
        shell: bash
        run: |
          python - <<'PY'
          import os, uuid
          with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f"PACKAGE_ID={uuid.uuid4().hex[:4]}\n")
          PY

      - name: Set version SHA
        run: invoke set-version

      - name: Build zipfile
        shell: bash
        run: |
          SAFE_REF_NAME="${{ github.event.pull_request.head.ref }}"
          SAFE_REF_NAME="${SAFE_REF_NAME//\//_}"
          invoke zipfile-build --filename "LDMP-${SAFE_REF_NAME}_${{ env.PACKAGE_ID }}.zip"
          echo "REF_NAME=${SAFE_REF_NAME}" >> $GITHUB_ENV

      - name: Plugin path details
        id: get-zip-details
        shell: bash
        run: |
          ls
          unzip -o "$GITHUB_WORKSPACE/LDMP-${REF_NAME}_${PACKAGE_ID}.zip" -d build
          ZIPDIR="build/LDMP-${REF_NAME}_${PACKAGE_ID}"
          mkdir -p "${ZIPDIR}"
          mv build/LDMP "${ZIPDIR}/LDMP"
          echo "ZIP_PATH=$GITHUB_WORKSPACE/${ZIPDIR}" >> $GITHUB_ENV
          echo "ZIP_NAME=LDMP-${REF_NAME}_${PACKAGE_ID}" >> $GITHUB_ENV

      - name: Uploading plugin build
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_PATH }}

      - name: Save the artifact url and pull request number
        shell: bash
        env:
          PR_NUMBER: ${{ github.event.number }}
          ARTIFACT_URL: ${{ steps.artifact-upload-step.outputs.artifact-url }}
        run: |
          echo "$ARTIFACT_URL" > artifact_url.txt
          echo "$PR_NUMBER" > pr_number.txt

      - name: Upload the artifact url
        uses: actions/upload-artifact@v4
        with:
          name: artifact_url
          path: ./artifact_url.txt

      - name: Upload the PR number
        uses: actions/upload-artifact@v4
        with:
          name: pr_number
          path: ./pr_number.txt
