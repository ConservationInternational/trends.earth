name: Update the staging repository with a new plugin version
on:
  push:
    tags:
      - "v*"

jobs:
  staging_repository_update:
    name: Staging repository update
    runs-on: ubuntu-latest
    container:
      image: qgis/qgis:release-3_34
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history including tags for setuptools-scm
        
      - name: Mark GitHub workspace as safe
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
        
      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install packaging tools
        run: |
          apt-get update
          apt-get install -y qttools5-dev-tools
          
      - name: Upgrade pip for PEP-517 support
        run: |
          python -m pip --version
          # Upgrade pip to >=24.0 to fix UNKNOWN package name issue with pyproject.toml-only packages
          # Older pip versions don't properly handle PEP-517 builds from git/source
          # See: https://stackoverflow.com/questions/78034052/unknown-project-name-and-version-number-for-my-own-pip-package
          python -m pip install --upgrade pip setuptools wheel
          python -m pip --version
          
      - name: Install build requirements
        run: pip install -r requirements-dev.txt

      - name: Set version SHA
        run: invoke set-version

      - name: Build zipfile
        run: invoke zipfile-build  --filename LDMP.zip

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: release
          clean: false
          fetch-depth: 0  # Fetch all history including tags for setuptools-scm

      - name: Make directory
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          
          echo "REF_NAME=$REF_NAME" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/docs/repository/$REF_NAME

      - name: Update custom plugin repository to include latest plugin version
        env:
          REF_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp $GITHUB_WORKSPACE/LDMP.zip $GITHUB_WORKSPACE/docs/repository/$REF_NAME/LDMP.zip

          DOWNLOAD_URL="https://raw.githubusercontent.com/ConservationInternational/trends.earth/refs/heads/release/docs/repository/$REF_NAME/LDMP.zip"
          echo "$DOWNLOAD_URL"

          invoke generate-plugin-repo-xml \
            --prerelease \
            --prerelease-url "$DOWNLOAD_URL" \
            --prerelease-time "$(date +'%Y-%m-%dT%H:%M:%SZ')" \
            --prerelease-filename "LDMP.zip"

          echo " " >> docs/repository/plugins.xml

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory $GITHUB_WORKSPACE

          git add docs/repository
          git add -f docs/repository/$REF_NAME/LDMP.zip
          git commit -m "Update on the staging repository"
          git push origin release
