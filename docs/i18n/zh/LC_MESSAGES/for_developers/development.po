# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2022, Conservation International
# This file is distributed under the same license as the Trends.Earth
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
# Translators:
# Alex Zvoleff <azvoleff@conservation.org>, 2022
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Trends.Earth 2.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-30 04:02+0000\n"
"PO-Revision-Date: 2022-05-26 11:56+0000\n"
"Last-Translator: Alex Zvoleff <azvoleff@conservation.org>, 2022\n"
"Language: zh\n"
"Language-Team: Chinese (https://www.transifex.com/conservation-"
"international/teams/80165/zh/)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/for_developers/development.rst:4
msgid "Development"
msgstr "开发"

#: ../../source/for_developers/development.rst:6
msgid ""
"|trends.earth| is free and open-source software, licensed under the `GNU "
"General Public License, version 2.0 or later "
"<https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html>`_."
msgstr ""
"|trends.earth|是免费的开源软件，根据`GNU通用公共许可证，2.0版或更高版本<https://www.gnu.org/licenses"
"/old-licenses/gpl-2.0.en.html>`_许可。"

#: ../../../<rst_epilog>:6
msgid "Trends.Earth"
msgstr "Trends.Earth"

#: ../../source/for_developers/development.rst:10
msgid ""
"There are a number of components to the |trends.earth| tool. The first is"
" a QGIS plugin supporting calculation of indicators, access to raw data, "
"reporting, and production of print maps . The code for the plugin, and "
"further instructions on installing it if you want to modify the code, are"
" in `trends.earth "
"<https://github.com/ConservationInternational/trends.earth>`_ GitHub "
"repository."
msgstr ""
"|trends.earth|工具有许多组成部分。首先是一个QGIS插件，支持指标的计算、原始数据的访问、报告和打印地图的制作。该插件的代码，以及如果您想修改代码的进一步安装说明，都在`trends.earth"
" <https://github.com/ConservationInternational/trends.earth>`_ "
"GitHub软件仓库中。"

#: ../../source/for_developers/development.rst:17
msgid ""
"The |trends.earth| QGIS plugin is supported by a number of different "
"Python scripts that allow calculation of the various indicators on Google"
" Earth Engine (GEE). These scripts sit in the \"gee\" sub-folder of that "
"GitHub repository."
msgstr ""

#: ../../source/for_developers/development.rst:21
msgid "The plugin is also supported by a number of other modules:"
msgstr ""

#: ../../source/for_developers/development.rst:23
msgid ""
"The `trends.earth-algorithms` module includes code for processing inputs "
"and outputs for the plugin, as well as other common functions supporting "
"calculation of NDVI integrals, statistical significance, and other shared"
" code. The code for this module is available in the `landdegradation "
"<https://github.com/ConservationInternational/trends.earth-algorithms>`_ "
"repository on GitHub."
msgstr ""

#: ../../source/for_developers/development.rst:31
msgid ""
"The `trends.earth-schemas` module includes code for managing the schemas "
"used for data input/output from `trends.earth`, including handling land "
"cover classes, job parameters, structuring reports for UNCCD, and other "
"related functions"
msgstr ""

#: ../../source/for_developers/development.rst:36
#, fuzzy
msgid ""
"Further details are below on how to contribute to Trends.Earth by working"
" on the plugin GUI code, by modifying the processing code, or by "
"contributing to translation of the website and plugin."
msgstr "关于如何通过编写插件代码、修改处理代码或为翻译网站和插件做出贡献，更多细节见下文。"

#: ../../source/for_developers/development.rst:41
msgid "Modifying the QGIS Plugin code"
msgstr "修改QGIS插件的代码"

#: ../../source/for_developers/development.rst:45
msgid "Downloading the trends.earth code"
msgstr "下载trends.earth代码"

#: ../../source/for_developers/development.rst:47
msgid ""
"The Trends.Earth code for both the plugin and the Google Earth Engine "
"scripts that support it are located on GitHub in the `trends.earth "
"<https://github.com/ConservationInternational/trends.earth>`_ repository."
" Clone this repository to a convenient place on your machine in order to "
"ensure you have the latest version of the code."
msgstr ""
"Trends.Earth插件和支持它的谷歌地球引擎脚本的代码都位于GitHub上的`trends.earth "
"<https://github.com/ConservationInternational/trends.earth>`_软件仓库中。克隆这个软件仓库到您机器上方便的位置，以确保您拥有最新版本的代码。"

#: ../../source/for_developers/development.rst:53
msgid ""
"There are a number of different branches of the trends.earth repository "
"that are under active development. The plugin officially supports QGIS3 "
"and the majority of development is occurring on the \"develop\" branch. "
"The \"qgis2\" branch is the older version of the plugin, and supports "
"QGIS2 version 2.18+."
msgstr ""
"trends.earth软件仓库中有许多不同的分支正在积极开发中。该插件正式支持QGIS3，大部分的开发工作是在 "
"\"开发（development） \"分支上进行的。\"qgis2 \"分支是该插件的旧版本，支持QGIS2的2.18以上版本。"

#: ../../source/for_developers/development.rst:59
#: ../../source/for_developers/development.rst:750
msgid "Installing dependencies"
msgstr "安装依赖项"

#: ../../source/for_developers/development.rst:62
msgid "Python"
msgstr "Python"

#: ../../source/for_developers/development.rst:64
msgid ""
"The plugin is coded in Python. In addition to being used to run the "
"plugin through QGIS, Python is also used to support managing the plugin "
"(changing the version, installing development versions, etc.). Though "
"Python is included with QGIS, you will also need a local version of "
"Python that you can setup with the software needed to manage the plugin. "
"The easiest way to manage multiple versions of Python is through the "
"`Anaconda distribution <https://www.anaconda.com>`_. For work developing "
"the plugin, Python 3 is required. To download Python 3.7 (recommended) "
"though Anaconda, `see this page <https://www.anaconda.com/distribution"
"/#download-section>`_."
msgstr ""
"该插件是用Python编码的。除了用于通过QGIS运行该插件外，Python还用于支持管理该插件（改变版本、安装开发版本等）。虽然Python包含在QGIS中，但您也需要一个本地版本的Python，可以用管理插件所需的软件来设置。管理多个Python版本的最简单方法是通过`Anaconda"
" distribution<https://www.anaconda.com>`_。对于开发该插件的工作，需要Python "
"3。要通过Anaconda下载Python 3.7（推荐），`请看这个页面 "
"<https://www.anaconda.com/distribution/#download-section>`_。"

#: ../../source/for_developers/development.rst:75
#: ../../source/for_developers/development.rst:753
msgid "Python dependencies"
msgstr "Python 依赖项"

#: ../../source/for_developers/development.rst:77
msgid ""
"In order to work with the trends.earth code, you need to have Invoke "
"installed on your machine, as well as a number of other packages that are"
" used for managing the documentation, translations, etc. These packages "
"are all listed in the \"dev\" requirements file for Trends.Earth, so they"
" can be installed by navigating in a command prompt to the root of the "
"trends.earth code folder and typing::"
msgstr ""
"为了使用trends.earth代码，您需要在机器上安装Invoke，以及其他一些用于管理文档、翻译等的包。这些软件包都列在Trends.Earth的"
" \"dev \"需求文件中，因此，为了安装这些文件，可以通过在命令提示符中导航到trends.earth代码文件夹的根部并输入："

#: ../../source/for_developers/development.rst:87
msgid ""
"If you are using Anaconda, you will first want to activate a Python 3.7 "
"virtual environment before running the above command (and any of the "
"other invoke commands listed on the page). One way to do this is by "
"starting an \"Anaconda prompt\", by `following the instructions on this "
"Anaconda page <https://docs.anaconda.com/anaconda/user-guide/getting-"
"started/#write-a-python-program-using-anaconda-prompt-or-terminal>`_."
msgstr ""
"如果您使用的是 Anaconda，在运行上述命令 (以及页面上列出的其他任何调用命令) 之前，首先要激活一个 Python 3.7 "
"虚拟环境。一种方法是通过启动 "
"\"Anaconda提示符\"，`按照这个Anaconda页面上的说明<https://docs.anaconda.com/anaconda"
"/user-guide/getting-started/#write-a-python-program-using-anaconda-"
"prompt-or-terminal>`_来实现。"

#: ../../source/for_developers/development.rst:94
msgid "PyQt"
msgstr "PyQt"

#: ../../source/for_developers/development.rst:96
msgid ""
"PyQt5 is the graphics toolkit used by QGIS3. To compile the user "
"interface for Trends.Earth for QGIS3 you need to install PyQt5. This "
"package can be installed from pip using::"
msgstr "PyQt5是QGIS3使用的图形工具箱。要为Trends.Earth编译QGIS3的用户界面，你需要安装PyQt5。这个软件包可以从pip上安装，方法是："

#: ../../source/for_developers/development.rst:103
msgid ""
"PyQt4 is the graphics toolkit used by QGIS2. The best source for this "
"package on Windows is from the set of packages maintained by Christoph "
"Gohlke at UC Irvine. To download PyQt4, select `the appropriate package "
"from this page <https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4>`_. "
"Choose the appropriate file for the version of Python you are using. For "
"example, if you are using Python 2.7, choose the version with \"cp27\" in"
" the filename. If you are using Python 3.7, choose the version with "
"\"cp37\" in the filename. Choose \"amd64\" for 64-bit python, and "
"\"win32\" for 32-bit python."
msgstr ""
"PyQt4是QGIS2使用的图形工具箱。这个软件包在Windows上的最佳来源是由加州大学欧文分校的Christoph "
"Gohlke维护的软件包集。要下载PyQt4，请选择 "
"\"本页中的相应软件包<https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4>\"。为您所使用的Python版本选择合适的文件。例如，如果您使用的是Python"
" 2.7，选择文件名中带有 \"cp27 \"的版本。如果使用的是Python 3.7，选择文件名中带有 \"cp37 \"的版本。选择 "
"\"amd64 \"表示64位Python，选择 \"win32 \"表示32位Python。"

#: ../../source/for_developers/development.rst:113
msgid ""
"After downloading from the above link, use ``pip`` to install it. For "
"example, for the 64-bit wheel for Python 3.7, you would run::"
msgstr "从上面的链接下载后，使用``pip``来安装它。例如，对于Python 3.7的64位Wheel，你可以运行："

#: ../../source/for_developers/development.rst:119
msgid "Changing the version of the plugin"
msgstr "修改插件的版本"

#: ../../source/for_developers/development.rst:121
msgid ""
"The convention for Trends.Earth is that version numbers ending in an odd "
"number (for example 0.65) are development versions, while versions ending"
" in an even number (for example (0.66) are release versions. Development "
"versions of the plugin are never released via the QGIS repository, so "
"they are never seen by normal users of the plugin. Odd-numbered "
"development versions are used by the Trends.Earth development team while "
"testing new features prior to their public release."
msgstr "Trends.Earth的惯例是，以奇数结尾的版本号（例如0.65）是开发版本，而以偶数结尾的版本（例如（0.66））是发布版本。插件的开发版本不会通过QGIS软件仓库发布，因此插件的普通用户不会看到它们。奇数的开发版本由Trends.Earth开发团队在公开发布前测试新功能时使用。"

#: ../../source/for_developers/development.rst:129
msgid ""
"If you wish to make changes to the code and have downloaded a public "
"release of the plugin (one ending in an even number), the first step is "
"to update the version of the plugin to the next sequential odd number. "
"So, for example, if you downloaded version 0.66 of the plugin, you would "
"need to update the version to be 0.67 before you started making your "
"changes. There are several places in the code where the version is "
"mentioned (as well as within every GEE script) so there is an invoke task"
" to assist with changing the version. To change the version to be 0.67, "
"you would run::"
msgstr "如果您想对代码进行修改，并且已经下载了该插件的公开版本（以偶数结尾的版本），第一步是将该插件的版本更新到下一个连续的奇数。因此，例如，如果您下载了0.66版本的插件，需要在开始修改之前将版本更新为0.67。在代码中，有几个地方提到了版本（以及在每个GEE脚本中），所以有一个调用任务来协助改变版本。要把版本改为0.67，您可以运行："

#: ../../source/for_developers/development.rst:140
msgid ""
"Running the above command will update the version number every place it "
"is referenced in the code. To avoid confusion, never change the version "
"to one that has already been released - always INCREASE the value of the "
"version tag to the next odd number."
msgstr "运行上述命令将更新代码中每处被引用的版本号。为了避免混淆，千万不要把版本号改为已经发布的版本--始终把版本标签的值增加到下一个奇数。"

#: ../../source/for_developers/development.rst:146
msgid "Testing changes to the plugin"
msgstr "测试插件的修改"

#: ../../source/for_developers/development.rst:148
msgid ""
"After making changes to the plugin code, you will need to test them to "
"ensure the plugin behaves as expected, and to ensure no bugs or errors "
"come up. The plugin should go through extensive testing before it is "
"released to the QGIS repository (where it can be accessed by other users)"
" to ensure that any changes to the code do not break the plugin."
msgstr "在对插件代码进行修改后，您需要对其进行测试，以确保插件的行为符合预期，并确保没有出现错误。该插件在发布到QGIS软件仓库（其他用户可以访问的地方）之前应该经过广泛的测试，以确保对代码的任何修改不会破坏该插件。"

#: ../../source/for_developers/development.rst:154
msgid ""
"To test any changes that you have made to the plugin within QGIS, you "
"will need to install it locally. There are invoke tasks that assist with "
"this process. The first step prior to installing the plugin is ensuring "
"that you have setup the plugin with all of the dependencies that it needs"
" in order to run from within QGIS. To do this, run::"
msgstr "为了测试您在QGIS中对插件所做的任何改动，您需要将其安装到本地。有一些调用任务可以帮助完成这一过程。在安装该插件之前，首先要确保已经设置了该插件的所有依赖项，以便在QGIS中运行。要做到这一点，请运行："

#: ../../source/for_developers/development.rst:162
msgid ""
"The above task only needs to be run immediately after downloading the "
"trends.earth code, or if any changes are made to the dependencies for the"
" plugin. By default ``plugin-setup`` will re-use any cached files on your"
" machine. To start from scratch, add the ``-c`` (clean) flag to the above"
" command."
msgstr ""
"上述任务只需要在下载trends.earth代码后立即运行，或者在对插件的依赖性有任何改变时运行。默认情况下，``插件-设置（plugin-"
"setup）``会重新使用你机器上的任何缓存文件。要从头开始，请在上述命令中加入`-c`（clean）标志。"

#: ../../source/for_developers/development.rst:168
msgid ""
"After running ``plugin-setup``, you are ready to install the plugin to "
"the QGIS plugins folder on your machine. To do this, run::"
msgstr "运行``plugin-setup``后，您就可以将该插件安装到您机器上的QGIS插件文件夹中。要做到这一点，请运行："

#: ../../source/for_developers/development.rst:173
msgid ""
"After running the above command, you will need to either 1) restart QGIS,"
" or 2) use the `Plugin Reloader "
"<https://plugins.qgis.org/plugins/plugin_reloader/>`_ to reload the "
"Trends.Earth plugin in order to see the effects of the changes you have "
"made."
msgstr ""
"运行上述命令后，您需要：1）重新启动QGIS，或2）使用 "
"\"插件重新加载器<https://plugins.qgis.org/plugins/plugin_reloader/>\"_重新加载Trends.Earth插件，以查看您所做的修改的效果。"

#: ../../source/for_developers/development.rst:178
msgid ""
"By default ``plugin-install`` will overwrite any existing plugin files on"
" your machine, but leave in place any data (administrative boundaries, "
"etc.) that the plugin might have downloaded. To start from scratch, add "
"the ``-c`` (clean) flag to the above command. You may need to close QGIS "
"in order to successfully perform a clean install of the plugin using the "
"``-c`` flag."
msgstr ""
"默认情况下``插件-安装（plugin-"
"install）``会覆盖你机器上的任何现有插件文件，但会保留插件可能下载的任何数据（管理边界等）。要从头开始，请在上述命令中添加`-c``（clean）标志。您可能需要关闭QGIS，以便使用`-c``标志成功执行插件的清洁安装。"

#: ../../source/for_developers/development.rst:185
msgid ""
"By default plugin-install assumes you want to install the plugin to be "
"used in QGIS3. To install the plugin for use in QGIS3, add the flag ``-v "
"2`` to the ``plugin-install`` command. Remember the plugin may or may not"
" be entirely functional on QGIS3 - the plugin was originally designed for"
" QGIS2 and is still being tested on QGIS3."
msgstr ""
"在默认情况下，plugin-install假定您要安装的插件是在QGIS3中使用的。若要安装在QGIS3中使用的插件，请在``plugin-"
"install``命令中添加``-v 2``的标志。请记住，该插件在QGIS3上不一定能完全发挥作用 - "
"该插件最初是为QGIS2设计的，目前仍在QGIS3上进行测试。"

#: ../../source/for_developers/development.rst:192
msgid "Syncing and deploying changes to the binaries"
msgstr "同步和部署对二进制文件的修改"

#: ../../source/for_developers/development.rst:194
msgid ""
"To speed the computations in Trends.Earth, some of the tools allow making"
" use of pre-compiled binaries that have been compiled using `numba "
"<https://numba.pydata.org>`_. Numba is an open source compiler that can "
"compile Python and NumPy code, making it faster than when it is run as "
"ordinary Python. To avoid users of Trends.Earth needing to download Numba"
" and all of its dependencies, the Trends.Earth team makes pre-compiled "
"binaries available for download if users choose to install them."
msgstr ""
"为了加快Trends.Earth的计算速度，一些工具允许使用已经用`numba "
"<https://numba.pydata.org>`_编译过的预编译二进制文件。Numba是一个开源的编译器，可以编译Python和NumPy代码，使其比作为普通Python运行时更快。为了避免Trends.Earth的用户需要下载Numba和它的所有依赖项，Trends.Earth团队提供了预编译的二进制文件供下载，如果用户选择安装的话。"

#: ../../source/for_developers/development.rst:202
msgid ""
"To generate pre-compiled binaries for the OS, bitness (32/64 bit) and "
"Python version you are running on your machine, use::"
msgstr "要为你的机器上运行的操作系统、位数(32/64位)和Python版本生成预编译的二进制文件，使用："

#: ../../source/for_developers/development.rst:208
msgid ""
"You will need a C++ compiler for the above command to work. On Windows, "
"see `this github page "
"<https://wiki.python.org/moin/WindowsCompilers#Which_Microsoft_Visual_C.2B"
"-.2B-_compiler_to_use_with_a_specific_Python_version_.3F>`_ for details "
"on how to install the Microsoft Visual C++ compiler needed for you Python"
" version. On MacOS, you will most likely need to install Xcode. On Linux,"
" install the appropriate version of GCC."
msgstr ""
"你需要一个C++编译器才能使上述命令生效。在Windows上，请参阅`这个github页面<https://wiki.python.org/moin/WindowsCompilers#Which_Microsoft_Visual_C.2B"
"-.2B-"
"_compiler_to_use_with_a_specific_Python_version_.3F>`_，了解如何安装你的Python版本所需的Microsoft"
" Visual C++编译器的细节。在MacOS上，你很可能需要安装Xcode。在Linux上，安装适当版本的GCC编译器。"

#: ../../source/for_developers/development.rst:216
msgid ""
"To make binaries publicly available, they are distributed through an "
"Amazon Web services S3 bucket. To upload the binaries generated with the "
"above command to the bucket, run::"
msgstr "为了使二进制文件公开可用，它们通过亚马逊网络服务S3储存桶分发。要把用上述命令生成的二进制文件上传到该储存桶，请运行："

#: ../../source/for_developers/development.rst:222
#: ../../source/for_developers/development.rst:232
#: ../../source/for_developers/development.rst:271
msgid ""
"The above command will fail if you do not have keys allowing write access"
" to the ``trends.earth`` bucket on S3."
msgstr "如果你没有允许写入S3上的`trends.earth'`储存桶的密钥，上述命令将失败。"

#: ../../source/for_developers/development.rst:225
msgid ""
"The above command will sync each individual binary file to S3. However, "
"users of the toolbox download the binaries as a single zipfile tied to "
"the version of the plugin that they are using. To generate that zipfile "
"so that it can be accessed by Trends.Earth users, run::"
msgstr "上述命令将把每个单独的二进制文件同步到S3。然而，工具箱的用户下载的二进制文件是一个与他们正在使用的插件版本相联系的单一压缩文件。要生成该压缩文件，以便Trends.Earth用户可以访问它，请运行："

#: ../../source/for_developers/development.rst:237
msgid "Building a plugin ZIP file"
msgstr "建立一个插件压缩文件"

#: ../../source/for_developers/development.rst:239
msgid ""
"There are several invoke tasks to help with building a ZIP file to deploy"
" the plugin to the QGIS repository, or to share the development version "
"of the plugin with others. To package the plugin and all of its "
"dependencies into a ZIP file that can be installed following `the process"
" described in the Trends.Earth readme "
"<https://github.com/ConservationInternational/trends.earth#installing-"
"latest-packaged-development-version>`_, run::"
msgstr ""
"有几个调用任务可以帮助建立一个压缩文件，以便将插件部署到QGIS软件仓库中，或与他人分享插件的开发版本。要将该插件及其所有依赖项打包成一个压缩文件，以便按照"
" \"Trends.Earth readme "
"<https://github.com/ConservationInternational/trends.earth#installing-"
"latest-packaged-development-version>\"中描述的过程进行安装，请运行："

#: ../../source/for_developers/development.rst:249
msgid ""
"This command will create a folder named ``build`` at the root of the "
"trends.earth code folder, and in that folder it will create a file called"
" ``LDMP.zip``. This file can be shared with others, who can use it to "
"`manually install Trends.Earth "
"<https://github.com/ConservationInternational/trends.earth#installing-"
"latest-packaged-development-version>`_. This can be useful if there is a "
"need to share the latest features with someone before they are available "
"in the publicly released version of the plugin."
msgstr ""
"这个命令将在trends.earth代码文件夹的根部创建一个名为``创建（build）``的文件夹，并在该文件夹中创建一个名为``LDMP.zip``的文件。这个文件可以与其他人共享，他们可以用它来`手动安装Trends.Earth"
" <https://github.com/ConservationInternational/trends.earth#installing-"
"latest-packaged-development-version>`_。如果需要在插件的公开发布版本之前与人分享最新的功能，这可能很有用。"

#: ../../source/for_developers/development.rst:258
msgid "Deploying the development version ZIP file"
msgstr "部署开发版本的压缩文件"

#: ../../source/for_developers/development.rst:260
msgid ""
"The Trends.Earth GitHub page gives a link a ZIP file that allows users "
"who may not be developers to access the development version of "
"Trends.Earth. To create a ZIP file and make it available on that page "
"(the ZIP file is stored on S3), run::"
msgstr "Trends.Earth的GitHub页面给出了一个压缩文件的链接，允许可能不是开发者的用户访问Trends.Earth的开发版本。要创建一个压缩文件并使其在该页面上可用（压缩文件存储在S3上），请运行："

#: ../../source/for_developers/development.rst:267
msgid ""
"This command will package the plugin and copy it to "
"`https://s3.amazonaws.com/trends.earth/sharing/LDMP.zip "
"<https://s3.amazonaws.com/trends.earth/sharing/LDMP.zip>`_."
msgstr ""
"该命令将打包该插件并将其复制到`https://s3.amazonaws.com/trends.earth/sharing/LDMP.zip "
"<https://s3.amazonaws.com/trends.earth/sharing/LDMP.zip>`_。"

#: ../../source/for_developers/development.rst:275
msgid "Modifying the Earth Engine processing code"
msgstr "修改地球引擎的处理代码"

#: ../../source/for_developers/development.rst:278
msgid ""
"The Google Earth Engine (GEE) processing scripts used by Trends.Earth are"
" all stored in the \"gee\" folder under the main trends.earth folder. For"
" these script to be accessible to users of the trends.earth QGIS plugin, "
"they have to be deployed to the api.trends.earth service Conservation "
"International maintains in order to allow users of the plugin to use "
"Earth Engine without the need to know how to program, or to have "
"individual user accounts on GEE. The below describes how to test and "
"deploy GEE scripts to be used with Trends.Earth."
msgstr ""
"Trends.Earth使用的Google Earth Engine（GEE）处理脚本都存放在trends.earth主文件夹下的 \"gee "
"\"文件夹中。为了让trends.earth "
"QGIS插件的用户能够访问这些脚本，必须将它们部署到保护国际组织维护的api.trends.earth服务中，以便让插件的用户能够使用地球引擎，而不需要知道如何编程，也不需要在GEE上拥有个人用户账户。下面介绍如何测试和部署GEE脚本，以便与Trends.Earth一起使用。"

#: ../../source/for_developers/development.rst:287
msgid "Setting up dependencies"
msgstr "设置依赖项"

#: ../../source/for_developers/development.rst:290
msgid "trends.earth-CLI"
msgstr "trends.earth-CLI"

#: ../../source/for_developers/development.rst:292
msgid ""
"The \"trends.earth-CLI\" Python package is required in order to work with"
" the api.trends.earth server. This package is located on GitHub in the "
"`trends.earth-CLI <https://github.com/Vizzuality/trends.earth-CLI>`_ "
"repository."
msgstr ""
"\"trends.earth-CLI \"Python 包是与 api.trends.earth "
"服务器一起工作所必需的。这个包位于GitHub上的`trends.earth-CLI "
"<https://github.com/Vizzuality/trends.earth-CLI>`_软件仓库。"

#: ../../source/for_developers/development.rst:297
msgid ""
"The first step is to clone this repository onto your machine. We "
"recommend that you clone the repository into the same folder where you "
"the trends.earth code. For example, if you had a \"Code\" folder on your "
"machine, clone both the `trends.earth "
"<https://github.com/ConservationInternational/trends.earth>`_ repository "
"(the code for the QGIS plugin and associated GEE scripts) and also the "
"`trends.earth-CLI <https://github.com/Vizzuality/trends.earth-CLI>`_ "
"repository into that same folder."
msgstr ""
"第一步是将这个版本库克隆到您的机器上。我们建议您将版本库克隆到存放trends.earth代码的同一文件夹中。例如，如果机器上有一个 \"代码 "
"\"文件夹，把`trends.earth "
"<https://github.com/ConservationInternational/trends.earth>`_软件仓库（QGIS插件和相关GEE脚本的代码）和`trends"
".earth-CLI <https://github.com/Vizzuality/trends.earth-"
"CLI>`_软件仓库克隆到同一文件夹。"

#: ../../source/for_developers/development.rst:306
msgid ""
"When you setup your system as recommended above, trends.earth-CLI will "
"work with the invoke tasks used to manage trends.earth without any "
"modifications. If, however, you download trends.earth-CLI into a "
"different folder, then you will need to add a file named \"invoke.yaml\" "
"file into the root of the trends.earth repository, and in that file tell "
"Trends.Earth where to locate the trends.earth-CLI code. This YAML file "
"should look something like the below (if you downloaded the code on "
"Windows into a folder called \"C:/Users/azvol/Code/trends.earth-"
"CLI/tecli\"):"
msgstr ""
"当您按照上述建议设置系统时，trends.earth-CLI 将与用于管理 Trends.earth "
"的调用任务一起运行，无需任何修改。但是，如果您将 trends.earth-CLI 下载到不同的文件夹中，那么您需要将一个名为 "
"\"invoke.yaml\" 的文件添加到 trends.earth 存储库的根目录中，并在此文件中告诉 Trends.Earth 在哪里 找到"
" trends.earth-CLI 代码。此 YAML 文件应如下所示（如果您将 Windows 上的代码下载到名为 "
"\"C:/Users/azvol/Code/trends.earth-CLI/tecli\" 的文件夹中）："

#: ../../source/for_developers/development.rst:320
msgid ""
"Again, you **do not** need to add this .yaml file if you setup your "
"system as recommended above."
msgstr "同样，如果您按照上述建议设置系统，则**不需要**添加此 .yaml 文件。"

#: ../../source/for_developers/development.rst:324
msgid "docker"
msgstr "docker"

#: ../../source/for_developers/development.rst:326
msgid ""
"The trends.earth-CLI package requires `docker <http://www.docker.com>`_ "
"in order to function. `Follow these instructions to install docker on "
"Windows <https://docs.docker.com/docker-for-windows/install/>`_, and "
"`these instructions to install docker on Mac OS <https://docs.docker.com"
"/docker-for-mac/install/>`_. If you are running Linux, `follow the "
"instructions on this page <https://docs.docker.com/install>`_ that are "
"appropriate for the Linux distribution you are using."
msgstr ""
"Trends.earth-CLI 包需要 `docker <http://www.docker.com>`_ 才能运行。`按照这些说明在 "
"Windows 上安装 docker <https://docs.docker.com/docker-for-"
"windows/install/>`_，和`这些说明在 Mac OS 上安装 docker <https://docs.docker.com"
"/docker-for-mac/install/>`_。如果您正在运行 "
"Linux，请遵循此页面上的说明<https://docs.docker.com/install>`_，适合您使用的 Linux 发行版。"

#: ../../source/for_developers/development.rst:336
msgid "Testing an Earth Engine script locally"
msgstr "本地测试 Earth Engine 脚本"

#: ../../source/for_developers/development.rst:338
msgid ""
"After installing the trends.earth-CLI package, you will need to setup a "
".tecli.yml file with an access token to a GEE service account in order to"
" test scripts on GEE. To setup the GEE service account for tecli, first "
"obtain the key for your service account in JSON format (from the google "
"cloud console), then and encode it in base64. Provide that base64 encoded"
" key to tecli with the following command::"
msgstr ""
"安装 Trends.earth-CLI 包后，您需要设置一个 .tecli.yml 文件，其中包含 GEE 服务账户的访问令牌，以便在 GEE "
"上测试脚本。要为 tecli 设置 GEE 服务账户，首先以 JSON 格式（从谷歌云控制台）获取您的服务账户的密钥，然后将其编码为 "
"base64。"

#: ../../source/for_developers/development.rst:347
msgid "where \"key\" is the base64 encoded JSON format service account key."
msgstr "其中，\"key\" 是 base64 编码的 JSON 格式服务账户密钥。"

#: ../../source/for_developers/development.rst:349
msgid ""
"While converting a script specifying code to be run on GEE from "
"JavaScript to Python, or when making modifications to that code, it can "
"be useful to test the script locally, without deploying it to the "
"api.trends.earth server. To do this, use the ``run`` invoke task. For "
"example, to test the \"land_cover\" script, go to the root directory of "
"the Trends.Earth code, and, in a command prompt, run::"
msgstr ""
"在将脚本指定要在 GEE 上运行的代码从 JavaScript 转换为 Python 时，或者在修改此代码时，在本地测试脚本而不将其部署到 "
"api.trends.earth 服务器会很有用。为此，请使用``run``调用任务。例如，要测试“land_cover”脚本，请转到 "
"Trends.Earth 代码的根目录，然后在命令提示符下运行："

#: ../../source/for_developers/development.rst:358
msgid ""
"This will use the trends.earth-CLI package to build and run a docker "
"container that will attempt to run the \"land_cover\" script. If there "
"are any syntax errors in the script, these will show up when the "
"container is run. Before submitting a new script to api.trends.earth, "
"always make sure that ``invoke tecli-run`` is able to run the script "
"without any errors."
msgstr ""
"这将使用 Trends.earth-CLI 包来构建和运行一个 docker 容器，此容器将尝试运行 \"land_cover\" "
"脚本。如果脚本中有任何语法错误，这些将在容器运行时显示。 在向 api.trends.earth 提交新脚本之前，请始终确保 ``invoke "
"tecli-run`` 能够运行脚本而不会出现任何错误。"

#: ../../source/for_developers/development.rst:364
msgid "When using ``invoke tecli-run`` you may get an error saying:"
msgstr "当使用 ``invoke tecli-run`` 时，您可能会收到一个错误提示："

#: ../../source/for_developers/development.rst:372
msgid ""
"This error can be caused if the clock on the docker container gets out of"
" sync with the system clock. Restarting docker should fix this error."
msgstr "如果 docker 容器上的时钟与系统时钟不同步，则可能会导致此错误。重新启动 docker 应该可以解决此错误。"

#: ../../source/for_developers/development.rst:376
msgid "Deploying a GEE script to api.trends.earth"
msgstr "将 GEE 脚本部署到 api.trends.earth"

#: ../../source/for_developers/development.rst:378
msgid ""
"When you have finished testing a GEE script and would like it to be "
"accessible using the QGIS plugin (and by other users of Trends.Earth), "
"you can deploy it to the api.trends.earth server. The first step in the "
"process is logging in to the api.trends.earth server. To login, run::"
msgstr ""
"当您完成 GEE 脚本的测试，并希望 QGIS 插件（以及 Trends.Earth 的其他用户）可以访问它时，您可以将它部署到 "
"api.trends.earth 服务器。此过程的第一步是登录 api.trends.earth 服务器。要登录，请运行："

#: ../../source/for_developers/development.rst:385
msgid ""
"You will be asked for a username and password. These are the same as the "
"username and password that you use to login to the Trends.Earth server "
"from the QGIS plugin. **If you are not an administrator, you will be able"
" to login, but the below command will fail**. To upload a script (for "
"example, the \"land_cover\" script) to the server, run::"
msgstr ""
"您将被要求输入用户名和密码。 这些与您用于从 QGIS 插件登录 Trends.Earth "
"服务器的用户名和密码相同。**您如果不是管理员，将可以登录，但以下命令将失败**。要将脚本（例如 \"land_cover\" "
"脚本）上传到服务器，请运行："

#: ../../source/for_developers/development.rst:393
msgid ""
"If this script already exists on the server, you will be asked if you "
"want to overwrite the existing script. Be very careful uploading scripts "
"with even-numbered versions, as these are publicly available scripts, and"
" any errors that you make will affect anyone using the plugin. Whenever "
"you are testing be sure to use development version numbers (odd version "
"numbers)."
msgstr "如果服务器上已经存在此脚本，系统将询问您是否要覆盖现有脚本。上传带有偶数版本的脚本时要非常小心，因为这些是公开可用的脚本，您犯的任何错误都会影响使用此插件的人。每当您进行测试时，请务必使用开发版本号（奇数版本号）。"

#: ../../source/for_developers/development.rst:399
msgid ""
"After publishing a script to the server, you can use the `tecli-info` "
"task to check the status of the script (to know whether it deployed "
"successfully - though note building the script may take a few minutes). "
"To check the status, of a deployed script, run::"
msgstr ""
"将脚本发布到服务器后，您可以使用 `tecli-info` "
"任务检查脚本的状态（以了解它是否部署成功——尽管注意构建脚本可能需要几分钟）。要检查已部署脚本的状态，请运行："

#: ../../source/for_developers/development.rst:406
msgid ""
"If you are making a new release of the plugin, and want to upload ALL of "
"the GEE scripts at once (this is necessary whenever the plugin version "
"number changes), run::"
msgstr "如果您正在制作插件的新版本，并且想要一次上传所有 GEE 脚本（每当插件版本号更改时，这是必需的），请运行："

#: ../../source/for_developers/development.rst:412
msgid ""
"Again - never run the above on a publicly released version of the plugin "
"unless you are intending to overwrite all the publicly available scripts "
"used by the plugin."
msgstr "同样地——除非您打算覆盖插件使用的所有公开可用的脚本，否则切勿在公开发布的插件版本上运行上述内容。"

#: ../../source/for_developers/development.rst:417
msgid "Editing vector layer templates"
msgstr "编辑矢量图层模板"

#: ../../source/for_developers/development.rst:419
msgid ""
"Trends.Earth allow users to digitize new vector features to delineate "
"areas of special interest."
msgstr "Trends.Earth 让用户可以数字化新的矢量特征，来描绘特别感兴趣的区域。"

#: ../../source/for_developers/development.rst:422
msgid ""
"For now only \"false positive/negative\" layers are supported, but more "
"can be added if necessary. Any vector layer is created from the template "
"GeoPackage files, which can be found inside the ``data/error_recode`` "
"folder of the plugin installation directory. For each vector type there "
"are 6 template files, one for each UN official language. The ISO language"
" code is added as a suffix to the file name. This is necessary to provide"
" localized labels in the attribute forms. When creation of the vector "
"layer is requested QGIS will look for the template file taking QGIS "
"locale into accont, as a fall-back option English version of the template"
" file is used."
msgstr ""
"目前仅支持“假阳性/阴性”层，但如有必要，可以添加更多。任何矢量图层都是从模板 GeoPackage 文件创建的，可以在插件安装目录的 "
"``data/error_recode`` 文件夹中找到。每种矢量类型有 6 个模板文件，每种联合国官方语言有一个。ISO "
"语言代码作为后缀添加到文件名。这对于在属性形式中提供本地化标签是必要的。当请求创建矢量图层时，QGIS 将查找将 QGIS "
"语言环境纳入账户的模板文件，作为使用模板文件的英文版本的备用选项。"

#: ../../source/for_developers/development.rst:433
msgid ""
"To change schema of the layer it is necessary to change corresponding "
"template files in the ``data/error_recode`` folder of the plugin "
"installation directory. Also template file contains a buil-in default "
"styling and attribute form configuration which will be automatically "
"applied to the layer when loading into QGIS."
msgstr ""
"要更改图层的架构，需要更改插件安装目录的“data/error_recode”文件夹中的相应模板文件。模板文件还包含一个内置的默认样式和属性表单配置，在加载到"
" QGIS 时将自动应用于图层。"

#: ../../source/for_developers/development.rst:439
msgid ""
"To display charts in the attribute form a built-in QML widget is used. "
"Data for charts are stored in the vector layer attribute table. Values "
"from the corresponding fields extracted with the help of expressions."
msgstr "为了在属性表单中显示图表，使用了内置的 QML 小部件。图表数据存储在矢量图层属性表中。借助表达式从相应字段中提取的值。"

#: ../../source/for_developers/development.rst:443
msgid "The code to generate charts looks like this:"
msgstr "生成图表的代码如下所示："

#: ../../source/for_developers/development.rst:473
msgid ""
"To extract field value function "
"``expression.evaluate(\"\\\"prod_deg\\\"\")`` is used, the only argument "
"it accepts is the name of the field. For false positive/negative layers "
"chart contains three indicators: productivity, land cover and soil "
"organic carbon. For each indicator plugin keeps three values stable, "
"degraded and improved percentage of the polygon area. For example, in "
"case of productivity indicator fields will be:"
msgstr ""
"要提取字段值函数 ``expression.evaluate(\"\\\"prod_deg\\\"\")`` "
"使用，它接受的唯一参数是字段的名称。对于假阳性/阴性层，图表包含三个指标：生产力、土地覆盖和土壤有机碳。对于每个指标插件，保持三个值稳定、退化和改进的多边形区域百分比。例如，在生产力指标字段的情况下，将是："

#: ../../source/for_developers/development.rst:481
msgid "prod_deg - degraded productivity"
msgstr "prod_deg——生产力下降"

#: ../../source/for_developers/development.rst:482
msgid "prod_stab - stable productivity"
msgstr "prod_stab——生产力稳定"

#: ../../source/for_developers/development.rst:483
msgid "prod_imp - improved productivity"
msgstr "prod_imp——生产力提升"

#: ../../source/for_developers/development.rst:485
msgid ""
"The same naming approach is applied to land cover (``land_*`` fields) and"
" soil organic carbon (``soil_*`` fields)."
msgstr "相同的命名方法应用于土地覆盖（``land_*`` 字段）和土壤有机碳（``soil_*`` 字段）。"

#: ../../source/for_developers/development.rst:488
msgid ""
"Calculation of area percentage is done with custom expression function, "
"its code can be found in the file ``charts.py`` in the plugin root "
"directory. Function optimized to work with large polygons and uses "
"following workflow. For a given geometry find a bbox and extract raster "
"susbset using this bbox. Perform in-memory geometry rasterization and "
"apply it as a mask to raster. Then count number of pixels which have "
"specific value and calculate percentage. As pixel counting is built on "
"numpy array functions it is very fast even for big polygons."
msgstr ""
"面积百分比的计算是通过自定义表达式函数完成的，其代码可以在插件根目录下的``charts.py``文件中找到。功能优化以处理大型多边形并使用以下工作流程。对于给定的几何图形，找到一个"
" bbox 并用它来提取栅格子集。执行内存几何光栅化，并将其作为掩码应用于光栅。然后计算具有特定值的像素数并计算百分比。由于像素计数建立在 "
"numpy 数组函数上，因此即使对于大型多边形也非常快。"

#: ../../source/for_developers/development.rst:497
msgid ""
"On the first attempt to edit a vector layer the user will be presented "
"with a dialog where they should select which datasets to use for "
"indicators. Then plugin will setup default expression values for all "
"indicator fields, so the value will be updated on every geometry change."
msgstr "在第一次尝试编辑矢量图层时，用户将看到一个对话框，他们应该在其中选择要用于指标的数据集。然后插件将为所有指标字段设置默认表达式值，因此，此值将在每次几何更改时更新。"

#: ../../source/for_developers/development.rst:503
msgid "Dataset metadata handling"
msgstr "数据集元数据处理"

#: ../../source/for_developers/development.rst:505
msgid ""
"Dataset metadata are stored in the QGIS QMD format. These QMD files can "
"be created for each raster individually and also for the whole dataset. "
"Metadata editor dialog is opened from the **Edit metadata** menu in the "
"Trends.Earth dock."
msgstr ""
"数据集元数据以 QGIS QMD 格式存储。这些 QMD 文件可以为每个栅格单独创建，也可以为整个数据集创建。元数据编辑器对话框从 "
"Trends.Earth 停靠栏的 **编辑元数据** 菜单打开。"

#: ../../source/for_developers/development.rst:510
msgid ""
"When dataset is exported to ZIP, conversion to ISO XML is performed using"
" XSLT transformation. Corresponding transformation are located in the "
"``data\\xsl`` subdirectory of the plugin installation folder."
msgstr ""
"将数据集导出到 ZIP 时，使用 XSLT 转换执行到 ISO XML 的转换。相应的转换位于插件安装文件夹的 ``data\\xsl`` "
"子目录中。"

#: ../../source/for_developers/development.rst:516
msgid "Updating the Reporting Framework"
msgstr "更新报告框架"

#: ../../source/for_developers/development.rst:521
msgid "Overview of the Reporting Framework"
msgstr "报告框架概述"

#: ../../source/for_developers/development.rst:522
msgid ""
"The Reports Framework is designed to be extensible while also providing "
"interactivity to the user through non-blocking operations. The Framework "
"heavily leverages on :code:`QgsProject` and :code:`QgsPrintLayout` "
"classes which are not thread safe hence, the use of :code:`qgis_process` "
"to do the heavy lifting of generating the reports (and charts). You can "
"find more information about :code:`qgis_process` `here "
"<https://docs.qgis.org/3.22/en/docs/user_manual/processing/standalone.html>`_."
msgstr ""
"报告框架设计为可扩展的，同时还通过非阻塞操作向用户提供交互性。此框架大量利用 :code:`QgsProject` 和 "
":code:`QgsPrintLayout` 类，它们的线程不安全，因此使用 :code:`qgis_process` "
"来完成生成报告（和图表）的繁重工作。您可以在 "
"`此处<https://docs.qgis.org/3.22/en/docs/user_manual/processing/standalone.html>`_"
" 找到关于 :code:`qgis_process` 的更多信息。"

#: ../../source/for_developers/development.rst:527
msgid ""
"There are two main steps the toolbox performs when generating reports "
"(and charts) for the default layers in a job:"
msgstr "在为作业中的默认图层生成报告（和图表）时，工具箱会执行两个主要步骤："

#: ../../source/for_developers/development.rst:529
msgid ""
"It creates a :code:`ReportTaskContext` object that constitutes a "
":code:`ReportConfiguration` object (see :ref:`config_report_params`) and "
"a :code:`Job` object that is represented in the **Datasets** panel. This "
":code:`ReportTaskContext` object is serialized to a JSON file and then "
"passed as one of the arguments in a :code:`ReportProcessHandlerTask` "
"object (that inherits from `QgsTask "
"<https://qgis.org/pyqgis/master/core/QgsTask.html>`_)."
msgstr ""
"它创建一个 :code:`ReportTaskContext` 对象，此对象构成一个 :code:`ReportConfiguration` "
"对象（请参阅 :ref:`config_report_params`）和一个在 **数据集** 面板中表示的 :code:`Job` 对象。这个 "
":code:`ReportTaskContext` 对象被序列化为 JSON 文件，然后作为参数之一传递给 "
":code:`ReportProcessHandlerTask` 对象（继承自 `QgsTask "
"<https://qgis.org/pyqgis/master/core/QgsTask.html>`_）。"

#: ../../source/for_developers/development.rst:534
msgid ""
"The :code:`ReportProcessHandlerTask` object initiates a separate instance"
" of :code:`qgis_process` and passes the path to the JSON file as an input"
" to :code:`trendsearth:reporttask` processing algorithm. This is a thin "
"wrapper that deserializes the file to the :code:`ReportTaskContext` "
"object and passes it to a :code:`ReportTaskProcessor` object that is "
"responsible for generating the reports and the job's QGIS project. For "
"algorithms that require charts, the :code:`ReportTaskProcessor` object "
"passes the job object to a :code:`AlgorithmChartsManager` object which "
"checks whether there is a chart configuration defined for the job's "
"algorithm. If defined, it generates the corresponding charts as PNG "
"files. (See :ref:`modifying_charts_config` for more information about "
"chart configurations)"
msgstr ""
":code:`ReportProcessHandlerTask` 对象启动一个单独的 :code:`qgis_process` 实例，并将 "
"JSON 文件的路径作为 :code:`trendsearth:reporttask` 处理算法的输入传递。这是一个瘦包装器，将文件反序列化为 "
":code:`ReportTaskContext` 对象，并将其传递给负责生成报告和作业的 QGIS 项目的 "
":code:`ReportTaskProcessor` 对象。对于需要图表的算法，:code:`ReportTaskProcessor` "
"对象将作业对象传递给 :code:`AlgorithmChartsManager` "
"对象，此对象检查是否为作业算法定义了图表配置。如果已定义，它会将相应的图表生成为 PNG 文件。（关于图表配置的更多信息，请参阅 "
":ref:`modifying_charts_config`）"

#: ../../source/for_developers/development.rst:542
msgid "The diagram below provides a high-level illustration of this process:"
msgstr "下图提供了此过程的高级说明："

#: ../../source/for_developers/development.rst:548
msgid "`* Click on the image for an enlarged view.`"
msgstr "`* 点击图片以查看大图。`"

#: ../../source/for_developers/development.rst:551
msgid ""
"Some of the function names in the diagram above have been simplified for "
"illustration purposes. The aforementioned classes can be found in the "
"`LDMP.reports "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports>`_"
" and `LDMP.processing_provider.report "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/processing_provider/report.py>`_"
" modules."
msgstr ""
"出于说明目的，上图中的一些函数名称已简化。上述类可以在 `LDMP.reports "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports>`_"
" 和 `LDMP.processing_provider.report "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/processing_provider/report.py>`_"
" 模块中找到。"

#: ../../source/for_developers/development.rst:559
msgid "Adding Report Layout Variables"
msgstr "添加报告布局变量"

#: ../../source/for_developers/development.rst:560
msgid ""
"Report variables provide context information related to a job, layer (or "
"band) or :ref:`report_settings` during the report execution process. "
"Currently, the toolbox supports variables listed in the "
":ref:`layout_expr_vars` section."
msgstr ""
"报告变量在报告执行过程中提供与作业、层（或波段）或 :ref:`report_settings` 相关的上下文信息。目前，此工具箱支持 "
":ref:`layout_expr_vars` 部分中列出的变量。"

#: ../../source/for_developers/development.rst:563
msgid ""
"Each variable is defined as a :code:`namedtuple` in the "
"`LDMP.reports.expressions "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports/expressions.py>`_"
" module and, is subsequently updated and evaluated by the "
":code:`ReportTaskProcessor` object."
msgstr ""
"每个变量在 `LDMP.reports.expressions "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports/expressions.py>`_"
" 模块中定义为一个 :code:`namedtuple`，随后由 ReportTaskProcessor 对象进行更新和评估。"

#: ../../source/for_developers/development.rst:566
msgid ""
"Follow the guidelines below on how to add new job or current layer "
"variables."
msgstr "请遵循以下关于如何添加新作业或当前图层变量的指南。"

#: ../../source/for_developers/development.rst:569
msgid "Job Variable"
msgstr "作业变量"

#: ../../source/for_developers/development.rst:570
msgid ""
"It enables information about the current job - being executed - to be "
"added to a report layout. Information about each job variable is "
"encapsulated in a :code:`JobAttrVarInfo` object that is made up of four "
"attributes:"
msgstr ""
"它可以将关于当前作业——正在执行——的信息添加到报告布局中。每个作业变量的信息都封装在一个 :code:`JobAttrVarInfo` "
"对象中，此对象由四个属性组成："

#: ../../source/for_developers/development.rst:574
#: ../../source/for_developers/development.rst:616
msgid "Attribute Name"
msgstr "属性名称"

#: ../../source/for_developers/development.rst:574
#: ../../source/for_developers/development.rst:616
msgid "Description"
msgstr "描述"

#: ../../source/for_developers/development.rst:574
#: ../../source/for_developers/development.rst:616
msgid "Data Type"
msgstr "数据类型"

#: ../../source/for_developers/development.rst:574
#: ../../source/for_developers/development.rst:616
msgid "Default Value"
msgstr "默认值"

#: ../../source/for_developers/development.rst:576
msgid "`job_attr`"
msgstr "`job_attr`"

#: ../../source/for_developers/development.rst:576
msgid ""
"Attribute name of a :code:`Job` object as used in a dot notation. For "
"instance, `id` corresponds to :code:`job.id`. You can even use the dot "
"notation to refer to attributes in inner nested classes e.g. "
"`results.uri.uri`."
msgstr ""
":code:`Job` 对象的属性名称，以点表示法使用。例如，`id` 对应于 "
":code:`job.id`。您甚至可以使用点符号来引用内部嵌套类中的属性，例如 `results.uri.uri`。"

#: ../../source/for_developers/development.rst:576
#: ../../source/for_developers/development.rst:581
#: ../../source/for_developers/development.rst:618
msgid "String"
msgstr "字符串"

#: ../../source/for_developers/development.rst:576
#: ../../source/for_developers/development.rst:581
#: ../../source/for_developers/development.rst:618
msgid "N/A"
msgstr "不适用"

#: ../../source/for_developers/development.rst:581
#: ../../source/for_developers/development.rst:618
msgid "`var_name`"
msgstr "`var_name`"

#: ../../source/for_developers/development.rst:581
msgid "Name of the report layout variable. It should be prefixed with `te_job_`."
msgstr "报告布局变量的名称。它应该以 `te_job_` 为前缀。"

#: ../../source/for_developers/development.rst:584
#: ../../source/for_developers/development.rst:621
msgid "`default_value`"
msgstr "`default_value`"

#: ../../source/for_developers/development.rst:584
#: ../../source/for_developers/development.rst:621
msgid ""
"A default value to use for `var_name`, mostly applied when designing "
"layouts."
msgstr "`var_name` 使用的默认值，主要应用于设计布局时。"

#: ../../source/for_developers/development.rst:584
#: ../../source/for_developers/development.rst:621
msgid "object"
msgstr "对象"

#: ../../source/for_developers/development.rst:587
#: ../../source/for_developers/development.rst:624
msgid "`fmt_func`"
msgstr "`fmt_func`"

#: ../../source/for_developers/development.rst:587
msgid ""
"A function object that will be used to convert the job's attribute value "
"to a format that is compatible with QGIS expressions. For instance, "
":code:`str` can be used to convert the value of a job's `id` from UUID to"
" string. You can also use lambda functions here."
msgstr ""
"用于将作业的属性值转换为与 QGIS 表达式兼容的格式的函数对象。例如，:code:`str` 可用于将作业的 `id` 值从 UUID "
"转换为字符串。您也可以在此处使用 lambda 函数。"

#: ../../source/for_developers/development.rst:587
#: ../../source/for_developers/development.rst:624
msgid "function object"
msgstr "函数对象"

#: ../../source/for_developers/development.rst:587
#: ../../source/for_developers/development.rst:624
msgid "None"
msgstr "全无"

#: ../../source/for_developers/development.rst:595
msgid ""
"The code snippet below shows how to add a variable `te_job_result_name` "
"that corresponds to :code:`job.results.name`."
msgstr "下方的代码片段显示了如何添加对应于 :code:`job.results.name` 的变量 `te_job_result_name`。"

#: ../../source/for_developers/development.rst:611
msgid "Layer Variable"
msgstr "图层变量"

#: ../../source/for_developers/development.rst:612
msgid ""
"It provides information about the current raster layer being executed. "
"This variable information is encapsulated in a :code:`LayerVarInfo` "
"object that is made up of three attributes:"
msgstr "它提供关于当前正在执行的栅格图层的信息。此变量信息被封装在一个 :code:`LayerVarInfo` 对象中，此对象由三个属性组成："

#: ../../source/for_developers/development.rst:618
msgid ""
"Name of the report layout variable. It should be prefixed with "
"`te_current_layer_`."
msgstr "报告布局变量的名称。它应该以 `te_current_layer_` 作为前缀。"

#: ../../source/for_developers/development.rst:624
msgid ""
"A function object that will be used to extract and/or convert a value "
"from a `QgsRasterLayer "
"<https://qgis.org/pyqgis/master/core/QgsRasterLayer.html>`_ object to a "
"format that is compatible with QGIS expressions. You can also use lambda "
"functions here."
msgstr ""
"一个函数对象，用于从 `QgsRasterLayer "
"<https://qgis.org/pyqgis/master/core/QgsRasterLayer.html>`_ "
"对象中提取值，和/或将值转换为与 QGIS 表达式兼容的格式。您也可以在此处使用 lambda 函数。"

#: ../../source/for_developers/development.rst:628
msgid "For instance, :code:`lambda layer: layer.name()` returns the layer name."
msgstr "例如，:code:`lambda layer: layer.name()` 返回图层名称。"

#: ../../source/for_developers/development.rst:632
msgid ""
"The code snippet below shows how to add a variable "
"`te_current_layer_height` that corresponds to the raster layer's height."
msgstr "下方的代码片段显示了如何添加与栅格图层高度相对应的变量 `te_current_layer_height`。"

#: ../../source/for_developers/development.rst:651
msgid "These variables are only available in the layout scope."
msgstr "这些变量仅在布局范围内可用。"

#: ../../source/for_developers/development.rst:657
msgid "Adding Chart Configurations"
msgstr "添加图表配置"

#: ../../source/for_developers/development.rst:658
msgid ""
"Charts can be grouped using a chart configuration object that corresponds"
" to a specific algorithm. Defining a new chart configuration is a three-"
"step process:"
msgstr "可以使用对应于特定算法的图表配置对象，对图表进行分组。定义新的图表配置是一个三步过程："

#: ../../source/for_developers/development.rst:661
msgid ""
"Create a new chart class that inherits from :code:`BaseChart` in the "
"`LDMP.reports.charts "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports/charts.py>`_"
" module. Implement the :code:`export` function to specify the chart type,"
" properties etc. using the :code:`Plotly` Python library that ships with "
"QGIS. Finally, within the :code:`export` function, call the "
":code:`save_image` function to write the Plotly's :code:`Figure` object "
"as an image file using any of the formats supported by Qt's "
":code:`QImageWriter` class. You can also specify the path as relative to "
"the root output directory which is also available as an attribute in the "
"base class. See the code snippet below:"
msgstr ""
"在 `LDMP.reports.charts "
"<https://github.com/ConservationInternational/trends.earth/tree/master/LDMP/reports/charts.py>`_"
" 模块中，创建一个继承自 :code:`BaseChart` 的新图表类。使用 QGIS 附带的 :code:`Plotly` Python "
"库实现 :code:`export` 函数以指定图表类型、属性等。最后，在 :code:`export` 函数中，调用 "
":code:`save_image` 函数以使用 Qt 的 :code:`QImageWriter` 类支持的任何格式，将 Plotly 的 "
":code:`Figure` 对象写入图像文件。您还可以将路径指定为相对于根输出目录的路径，此路径也可用作基类中的属性。请参阅下方的代码片段："

#: ../../source/for_developers/development.rst:691
msgid ""
"You can refer to the :code:`UniqueValuesPieChart` class for a more "
"complete example."
msgstr "对于更完整的示例，可以参考 :code:`UniqueValuesPieChart` 类。"

#: ../../source/for_developers/development.rst:693
msgid ""
"Create a chart configuration class that inherits from "
":code:`BaseAlgorithmChartsConfiguration` and implement the "
":code:`_add_charts` function. The chart configuration class basically "
"defines which charts will be used for a given algorithm. The "
":code:`layer_band_infos` attribute is a list of :code:`LayerBandInfo` "
"objects that contains the layer and band_info data required to produce "
"the charts. You can refer to the :code:`LandCoverChartsConfiguration` "
"class for a more complete example."
msgstr ""
"创建一个继承自 :code:`BaseAlgorithmChartsConfiguration` 的图表配置类，并实现 "
":code:`_add_charts` 函数。图表配置类基本定义了哪些图表将用于给定算法。:code:`layer_band_infos` "
"属性是一个 :code:`LayerBandInfo` 对象列表，其中包含生成图表所需的图层和 band_info 数据。您可以参考 "
":code:`LandCoverChartsConfiguration` 类以获得更完整的示例。"

#: ../../source/for_developers/development.rst:699
msgid ""
"Finally, map an algorithm (name) to the correspond chart configuration "
"class in the :code:`AlgorithmChartsManager` class as shown below:"
msgstr "最后，将算法（名称）映射到 :code:`AlgorithmChartsManager` 类中对应的图表配置类，如下所示："

#: ../../source/for_developers/development.rst:713
msgid ""
"The :code:`AlgorithmChartsManager` class, which is instantiated in the "
":code:`ReportTaskProcessor` object, will create a new chart configuration"
" object for a corresponding job's algorithm when reports are being "
"generated."
msgstr ""
"在 :code:`ReportTaskProcessor` 对象中实例化的 :code:`AlgorithmChartsManager` "
"类，将在生成报告时为相应作业的算法创建一个新的图表配置对象。"

#: ../../source/for_developers/development.rst:718
msgid "Contributing to the documentation"
msgstr "为文档做贡献"

#: ../../source/for_developers/development.rst:721
msgid "Overview"
msgstr "概况"

#: ../../source/for_developers/development.rst:723
msgid ""
"The documentation for Trends.Earth is produced using `Sphinx <http://www"
".sphinx-doc.org/en/master/>`_, and is written in `reStructuredText "
"<http://docutils.sourceforge.net/rst.html>`_ format. If you are "
"unfamiliar with either of these tools, see their documentation for more "
"information on how they are used."
msgstr ""
"Trends.Earth 的文档是使用 `Sphinx <http://www.sphinx-doc.org/en/master/>`_ "
"生成的，并以 `reStructuredText <http://docutils.sourceforge.net/rst.html>`_ "
"格式编写。如果您不熟悉这些工具中的任何一个，请参阅它们的文档以获取关于如何使用它们的更多信息。"

#: ../../source/for_developers/development.rst:729
msgid ""
"The documentation for Trends.Earth is stored in the \"docs\" folder under"
" the main trends.earth directory. Within that folder there are a number "
"of key files and folders to be aware of:"
msgstr ""
"Trends.Earth 的文档存储在 Trends.earth 主目录下的 \"docs\" "
"文件夹中。在此文件夹中，有许多需要注意的重要文件和文件夹："

#: ../../source/for_developers/development.rst:733
msgid ""
"build: contains the build documentation for trends.earth (in PDF and HTML"
" format). Note it will only appear on your machine after running the "
"``docs-build`` invoke task."
msgstr ""
"构建：包含 Trends.earth 的构建文档（PDF 和 HTML 格式）。注意，它只会在运行 ``docs-build`` "
"调用任务后出现在您的机器上。"

#: ../../source/for_developers/development.rst:736
msgid ""
"i18n: contains translations of the documentation into other languages. "
"The files in here are normally processed automatically using invoke "
"tasks, so you shouldn't ever have reason to modify anything in this "
"folder."
msgstr "i18n：包含将文档翻译成其他语言的版本。这里的文件通常是使用调用任务自动处理的，所以您不应该修改此文件夹中的任何东西。"

#: ../../source/for_developers/development.rst:739
msgid ""
"resources: contains any resources (primarily images or PDFs) that are "
"referred to in the documentation. Currently there is only one folder "
"(\"EN\", for English) as all of the images in the documentation are from "
"the English version of the plugin - if appropriate additional folders can"
" be added under \"resources\" with two-letter language codes to include "
"images specific to a particular language."
msgstr ""
"资源：包含文档中提到的任何资源（主要是图像或 "
"PDF）。目前只有一个文件夹（\"EN\"，表示英语），因为文档中的所有图像都来自插件的英语版本——如果合适，可以在“资源”下添加带有两个字母语言代码的附加文件夹，以包含特定语言的图像。"

#: ../../source/for_developers/development.rst:745
msgid ""
"source: contains the reStructuredText source files that define the "
"documentation (these are the actual English text of the documentation, "
"and are the files you are most likely to need to modify)."
msgstr "源：包含定义文档的 reStructuredText 源文件（这些是文档的实际英文文本，是您最有可能需要修改的文件）。"

#: ../../source/for_developers/development.rst:755
msgid ""
"In order to work with the documentation, you need to have invoke, Sphinx,"
" sphinx-intl, and sphinx-rtd-theme (the theme for the Trends.Earth "
"website) installed on your machine. These packages are all listed in the "
"\"dev\" requirements file for Trends.Earth, so they can be installed by "
"navigating in a command prompt to the root of the trends.earth code "
"folder and typing::"
msgstr ""
"为使用文档，您需要在机器上安装 invoke、Sphinx、sphinx-intl 和 sphinx-rtd-theme（Trends.Earth"
" 网站的主题）。这些包都列在 Trends.Earth 的“开发”需求文件中，因此，可以在命令提示符中导航到 Trends.earth "
"代码文件夹的根目录，并键入以下内容以安装它们："

#: ../../source/for_developers/development.rst:764
msgid "LaTeX"
msgstr "LaTeX"

#: ../../source/for_developers/development.rst:766
msgid ""
"LaTeX is used to produce PDF outputs of the documentation for "
"Trends.Earth."
msgstr "LaTeX 用于生成 Trends.Earth 文档的 PDF 输出。"

#: ../../source/for_developers/development.rst:768
msgid ""
"To install on Windows, `follow the process outlined here "
"<https://www.tug.org/protext>`_ to install the proTeXt distribution of "
"LaTeX from `the zipfile available here "
"<http://ftp.math.purdue.edu/mirrors/ctan.org/systems/windows/protext/>`_."
" The LaTeX installer is quite large (several GB) so it might take some "
"time to download and install."
msgstr ""
"要在 Windows 上安装，请按照此处列出的过程 <https://www.tug.org/protext>`_，从此处提供的 zip 文件 "
"<http://ftp.math.purdue.edu/mirrors/ctan.org/systems/windows/protext/>`_ "
"安装 LaTeX 的 proTeXt 发行版。LaTeX 安装程序非常大（数个 GB），因此下载和安装可能需要一些时间。"

#: ../../source/for_developers/development.rst:775
msgid ""
"On MacOS, MacTeX is a good option, and can be installed `following the "
"instructions here <http://www.tug.org/mactex/>`_."
msgstr "在 MacOS 上，MacTeX 是个很好的选择，可以按照此处的说明进行安装<http://www.tug.org/mactex/>`_。"

#: ../../source/for_developers/development.rst:778
msgid ""
"On Linux, installing LaTeX should be much easier - use your "
"distribution's package manager to find and install whatever LaTeX "
"distribution is included by default."
msgstr "在 Linux 上，安装 LaTeX 应该更容易——使用您发行版的包管理器，来查找和安装默认包含的任何 LaTeX 发行版。"

#: ../../source/for_developers/development.rst:783
msgid "Qt Linguist"
msgstr "Qt Linguist"

#: ../../source/for_developers/development.rst:785
msgid ""
"Qt Linguist is also needed in order to pull strings from the code and GUI"
" for translation. The \"lrelease\" command must be available and on your "
"path. Try trying::"
msgstr "为了从代码和 GUI 中提取字符串进行翻译，还需要 Qt Linguist。\"lrelease\" 命令必须可用并且在您的路径上。请尝试："

#: ../../source/for_developers/development.rst:791
msgid ""
"within a terminal window. If the file is not found, you'll need to "
"install Qt Linguist. `This page <https://github.com/lelegard/qtlinguist-"
"installers/releases>`_ is one source of installers for Qt Linguist. Once "
"you install Qt Linguist ensure you add the folder containing lrelease to "
"your path so that the Trends.Earth invoke script can find it."
msgstr ""
"在终端窗口中。您如果找不到文件，则需要安装 Qt Linguist。`此页面 <https://github.com/lelegard"
"/qtlinguist-installers/releases>`_ 是 Qt Linguist 安装程序的一个来源。安装 Qt Linguist"
" 后，确保将包含 lrelease 的文件夹添加到路径中，以便 Trends.Earth 调用脚本可以找到。"

#: ../../source/for_developers/development.rst:799
msgid "Updating and building the documentation"
msgstr "更新和构建文档"

#: ../../source/for_developers/development.rst:801
msgid ""
"Once you have installed the sphinx requirements, you are ready to begin "
"modifying the documentation. The files to modify are located under the "
"\"docs\\\\source\" folder. After making any changes to these files, you "
"will need to build the documentation in order to view the results. There "
"are two versions of the Trends.Earth documentation: an HTML version (used"
" for the website) and a PDF version (for offline download). To build the "
"documentation for Trends.Earth, use the \"docs-build\" invoke task. By "
"default, this task will build the full documentation for Trends.Earth, in"
" HTML and PDF, for all supported languages. This can take some time to "
"run (up to a few hours). If you are just testing the results of some "
"minor changes to the documentation, it is usually best to use the ``-f`` "
"option (for \"fast\"). This option will build only the English HTML "
"documentation, which should take only a few seconds. To build using the "
"fast option, run::"
msgstr ""
"安装 sphinx 要求后，您就可以开始修改文档了。要修改的文件位于 \"docs\\\\source\" "
"文件夹下。对这些文件进行更改后，您将需要构建文档以查看结果。Trends.Earth 文档有两个版本：HTML 版本（用于网站）和 PDF "
"版本（用于离线下载）。要构建 Trends.Earth 的文档，请使用 \"docs-build\" 调用任务。默认情况下，此任务将为 "
"Trends.Earth 构建所有支持语言的 HTML 和 PDF "
"格式的完整文档。这可能需要一些时间来运行（最多几个小时）。如果您只是测试对文档进行一些细微更改的结果，通常最好使用``-f`` "
"选项（用于“快速”）。此选项将仅构建英文 HTML 文档，这应该只需要几秒钟。要使用快速选项构建，请运行："

#: ../../source/for_developers/development.rst:817
msgid ""
"The above command will take a few seconds to run, and then if you look "
"under \"docs\\\\build\\\\html\\\\en\", you will see the HTML version of "
"the documentation. Load the \"index.html\" file in a web browser to see "
"how it looks."
msgstr ""
"上方的命令需要几秒钟才能运行，您如果在 \"docs\\\\build\\\\html\\\\en\" 下查看，会看到文档的 HTML "
"版本。在浏览器中加载 \"index.html\" 文件以查看其外观。"

#: ../../source/for_developers/development.rst:821
msgid ""
"To build the full documentation, for all languages, in PDF and in HTML "
"(remember this could take a few hours to complete), run::"
msgstr "要以 PDF 和 HTML 格式构建所有语言的完整文档（请记住，这可能需要几个小时才能完成），请运行："

#: ../../source/for_developers/development.rst:826
msgid ""
"After running the above command you will see (for English) the HTML "
"documentation under \"docs\\\\build\\\\html\\\\en\", and the PDFs of the "
"documentation under \"docs\\\\build\\\\html\\\\en\\\\pdfs\"."
msgstr ""
"运行上述命令后，您将看到（英文）\"docs\\\\build\\\\html\\\\en\" 下的 HTML 文档，以及 "
"\"docs\\\\build\\\\html\\\\en\\\\pdfs\" 下的 PDF 文档。"

#: ../../source/for_developers/development.rst:830
msgid ""
"If you want to test a specific language (when testing translations, for "
"example), you can specify a two letter language code to only build the "
"docs for that language. For example, to build the Spanish documentation "
"only, run::"
msgstr "如果您想测试特定语言（例如，在测试翻译时），您可以指定两个字母的语言代码以仅构建此语言的文档。例如，要仅构建西班牙语文档，请运行："

#: ../../source/for_developers/development.rst:837
msgid ""
"Note that options can be combined, so you can use the fast option to "
"build only the HTML version of the Spanish documentation by running::"
msgstr "请注意，选项可以组合，因此您可以使用快速选项，通过运行以下命令，仅构建西班牙语文档的 HTML 版本："

#: ../../source/for_developers/development.rst:842
msgid ""
"When building the full documentation for the website, it is a good idea "
"to first remove any old builds of the documentation, as they might "
"contain files that are no longer used in the updated documentation. To do"
" this, use the ``-c`` (clean) option::"
msgstr "在为网站构建完整文档时，最好先删除文档的所有旧版本，因为它们可能包含更新文档中不再使用的文件。为此，请使用 ``-c`` (clean) 选项："

#: ../../source/for_developers/development.rst:849
msgid ""
"In general, docs-build MUST complete without any errors if you are "
"planning to share the documentation or post it on the website. However, "
"when testing things locally, you might want to ignore documentation "
"errors that pop up only for some of the languages (due to syntax errors "
"arising from translation errors, etc.), and continue building the "
"remaining documentation regardless of whether there are any errors. To do"
" this, use the ``-i`` (ignore errors) option::"
msgstr ""
"一般来说，如果您打算共享文档或将其发布到网站上，则 docs-build "
"必须完成且没有任何错误。但是，在本地测试时，您可能希望忽略仅针对某些语言弹出的文档错误（由于翻译错误等引起的语法错误），并继续构建剩余的文档，无论是否有任何错误。为此，请使用``-i``（忽略错误）选项："

#: ../../source/for_developers/development.rst:858
msgid ""
"Whenever you make any changes to the text of the documentation, it is a "
"good idea to push the latest strings to Transifex so they can be "
"translated. To update the strings on Transifex with any new changes, "
"run::"
msgstr ""
"每当您对文档的文本进行任何更改时，最好将最新的字符串推送到 Transifex，以便进行翻译。要使用任何新的更改来更新 Transifex "
"上的字符串，请运行："

#: ../../source/for_developers/development.rst:864
msgid ""
"To successfully run the above command you will need to have the key for "
"the Trends.Earth transifex account."
msgstr "要成功运行上述命令，您需要有 Trends.Earth transifex 账户的密钥。"

#: ../../source/for_developers/development.rst:868
msgid "Building documentation for release"
msgstr "构建发布文档"

#: ../../source/for_developers/development.rst:870
msgid ""
"Before releasing new documentation, always pull the latest translations "
"from Transifex so that all translations are up to date. To do this, run::"
msgstr "在发布新文档之前，请始终从 Transifex 中提取最新的翻译，以便所有翻译都是最新的。为此，请运行："

#: ../../source/for_developers/development.rst:875
msgid ""
"To build a version of the documentation for public release (either to the"
" website, or in PDF) you must build the entire documentation using "
"``docs-build`` with no additional parameters::"
msgstr "要构建公开发布的文档版本（网站或 PDF 格式），您必须使用 ``docs-build`` 构建整个文档，无需其他参数："

#: ../../source/for_developers/development.rst:881
msgid ""
"This process must complete successfully with no errors. If any errors "
"occur during the process, review the error message, and make any "
"modifications needed to allow the build to complete successfully. Once "
"the build completes with no errors, the files are ready to be deployed on"
" the website."
msgstr "此过程必须成功完成且没有错误。如果在此过程中发生任何错误，请查看错误消息，并进行必要的修改以使构建成功完成。一旦构建完成且没有错误，就可以将文件部署在网站上。"

#: ../../source/for_developers/development.rst:886
msgid ""
"Both of the above commands also have ``-f`` (force) options that force "
"pulling or pushing the latest translations from or to Transifex "
"(respectively). Only use these options if you are VERY sure of what you "
"are doing, as they can completely overwrite the translations on "
"Transifex, leading to lost work done by the translators if the latest "
"translations have not yet been committed to github."
msgstr ""
"上述两个命令也有 ``-f`` （强制）选项，强制从 Transifex "
"拉或推最新的翻译（分别）。仅当您非常确定自己在做什么时才使用这些选项，因为它们可以完全覆盖 Transifex 上的翻译，如果最新的翻译尚未提交到"
" github，则会导致翻译人员所做的工作丢失。"

#: ../../source/for_developers/development.rst:894
msgid "Adding new documentation text"
msgstr "添加新的文档文本"

#: ../../source/for_developers/development.rst:896
msgid ""
"Any new .rst files that are added to the documentation need to be added "
"to several configuration files to ensure they appear in the navigation "
"menu, that they are properly translated, and (for tutorials) to ensure "
"that they are generated in PDF so they can be downloaded for offline use."
msgstr ""
"添加到文档中的任何新 .rst 文件都需要添加到多个配置文件中，以确保它们出现在导航菜单中，它们被正确翻译，并且（对于教程）确保它们以 PDF "
"格式生成，以便它们可以下载以供离线使用。"

#: ../../source/for_developers/development.rst:901
msgid ""
"docs\\\\source\\\\index.rst: add new .rst files in the appropriate place "
"here to ensure that they are linked to from the navigation menu."
msgstr "docs\\\\source\\\\index.rst：在此处的适当位置添加新的 .rst 文件，以确保从导航菜单链接到它们。"

#: ../../source/for_developers/development.rst:903
msgid ""
".tx\\\\config: list new .rst files here (in the same format as the other "
"files already included) in order to make the translation software aware "
"of them so that they can be translated"
msgstr ".tx\\\\config：在此处列出新的 .rst 文件（与已包含的其他文件格式相同），以使翻译软件能够识别它们，以便进行翻译"

#: ../../source/for_developers/development.rst:906
msgid ""
"docs\\\\source\\\\conf.py: if you want to generate a PDF file of page of "
"the website, then you must list that page here in the ``latex_documents``"
" list. Usually we do this only for tutorial pages that we want to make "
"available to workshop participants in individual PDFs. Every page on the "
"site will be included in the PDF version of the website as a whole, "
"regardless of whether it is in the ``latex_documents`` list."
msgstr ""
"docs\\\\source\\\\conf.py：如果要生成网站页面的 PDF 文件，则必须在 ``latex_documents`` "
"列表中列出该页面。通常我们只对希望以个人 PDF 格式提供给研讨会参与者的教程页面执行此操作。网站上的每个页面都将包含在整个网站的 PDF "
"版本中，无论它是否在 ``latex_documents`` 列表中。"

#: ../../source/for_developers/development.rst:914
msgid "Adding new images or other resources"
msgstr "添加新图像或其他资源"

#: ../../source/for_developers/development.rst:916
msgid ""
"Any new images or other resources (PDFs, etc.) that are needed by the "
"documentation should be added under \"docs\\\\resources\\\\en\". If "
"desired, it is possible to upload different versions of an image so that "
"the image appears with the proper translations. This could be useful if "
"you want to show the GUI interface in the appropriate language, for "
"example. to do this, first upload a copy of the image to "
"\"docs\\\\resources\\en\" (with English text in it). Then, create a copy "
"of the image with translated text and place that image under the "
"appropriate folder for that language (for example an image showing "
"Spanish translations would go under \"docs\\\\resources\\\\es\"). The "
"English version of the image will be used as the default for all "
"languages for which a native version of the image is not provided, while "
"a localized version will be used when available."
msgstr ""
"文档所需的任何新图像或其他资源（PDF 等）都应添加到 \"docs\\\\resources\\\\en\" "
"下。如果需要，可以上传不同版本的图像，以便图像显示正确的翻译。例如，如果您想以适当的语言显示 GUI "
"界面，这可能很有用。为此，首先将图像的副本上传到 "
"\"docs\\\\resources\\en\"（其中包含英文文本）。然后，创建带有翻译文本的图像副本，并将此图像放在此语言的相应文件夹下（例如，显示西班牙语翻译的图像将位于"
" \"docs\\\\resources\\\\es\" "
"下）。图像的英文版本将用作未提供图像本地版本的所有语言的默认设置，而本地化版本将在可用时使用。"

#: ../../source/for_developers/development.rst:929
msgid ""
"There is another folder, ``docs\\\\source\\\\static``, that is used to "
"hold resources temporarily while running the scripts that build the "
"Trends.Earth documenation. You may have images listed under that folder "
"if you have ever built the documenation on that machine. **This folder "
"should never be used to add new resources** - new resources should always"
" go under ``docs\\\\resources\\\\en`` or, for translated images, the "
"appropriate language-specific folder under ``docs\\\\resources``."
msgstr ""
"还有另一个文件夹 ``docs\\\\source\\\\static``，用于在运行构建 Trends.Earth "
"文档的脚本时临时保存资源。如果您曾经在这台机器上构建过文档，那么您可能在此文件夹下列出了图像。**永远不要使用此文件夹添加新资源**——新资源应始终位于"
" ``docs\\\\resources\\\\en`` 下，或者对于翻译的图像，应位于 ``docs\\\\resources`` "
"下相应的特定语言文件夹。"

#: ../../source/for_developers/development.rst:938
msgid "Contributing as a translator"
msgstr "作为译者做贡献"

#: ../../source/for_developers/development.rst:940
msgid ""
"The translations for both the QGIS plugin and also for this site are "
"managed by `transifex <http://www.transifex.com>`_. If you'd like to "
"contribute to translating the plugin and documentation (and we'd love to "
"have your help!) you can request to join `our team through transifex "
"<https://www.transifex.com/conservation-international/trendsearth>`_, or "
"by emailing us at `trends.earth@conservation.org "
"<mailto:trends.earth@conservation.org>`_."
msgstr ""
"QGIS 插件和本网站的翻译均由 `transifex <http://www.transifex.com>`_ "
"管理。您如果想为翻译插件和文档做出贡献（我们很乐意得到您的帮助！），可以通过 transifex "
"<https://www.transifex.com/conservation-international/trendsearth>`_ "
"请求加入我们的团队，或发送电子邮件至 `trends.earth @conservation.org "
"<mailto:trends.earth@conservation.org>`_。"

#: ../../source/for_developers/development.rst:949
msgid "Releasing a new plugin version"
msgstr ""

#: ../../source/for_developers/development.rst:951
msgid "There are several steps to making a new public release of the plugin:"
msgstr ""

#: ../../source/for_developers/development.rst:953
msgid "Update changelog in `LDMP\\metadata.txt`"
msgstr ""

#: ../../source/for_developers/development.rst:954
msgid ""
"Run `invoke set-version -v X.Y.Z -m` (where X.Y.Z is the new version) to "
"set the new version number for both `trends.earth` and subcomponents "
"(`trends.earth-schemas` and `trends.earth-algorithms`)"
msgstr ""

#: ../../source/for_developers/development.rst:957
msgid ""
"Ensure all changes are commited, and then tag the new versions and push "
"those tags to github by running `invoke set-tag -m`"
msgstr ""

#: ../../source/for_developers/development.rst:959
msgid "Ensure that all new versionsa and tags are pushed to github"
msgstr ""

#: ../../source/for_developers/development.rst:960
msgid "Publish release on QGIS repository"
msgstr ""

#: ../../source/for_developers/development.rst:961
msgid "Publish on github with - Run `invoke release-github'"
msgstr ""

#: ../../source/for_developers/development.rst:963
msgid ""
"If you want to make a release after updating the scripts that call the "
"Trends.Earth API (so if either the code under the `gee` folder changes, "
"or if `trends.earth-schemas` or `trends.earth-algorithms` have changed, "
"then you need to add a `-g` flag to the above command. After running "
"`invoke set-version` with the `-g` flag you will also need to run `invoke"
" tecli-publish`, in order to push the updated scripts to the API."
msgstr ""

#~ msgid ""
#~ "The |trends.earth| QGIS plugin is "
#~ "supported by a number of different "
#~ "Python scripts that allow calculation of"
#~ " the various indicators on Google "
#~ "Earth Engine (GEE). These scripts sit"
#~ " in the \"gee\" sub-folder of "
#~ "that GitHub repository. The GEE scripts"
#~ " are supported by the `landdegradation` "
#~ "Python module, which includes code for"
#~ " processing inputs and outputs for "
#~ "the plugin, as well as other "
#~ "common functions supporting calculation of "
#~ "NDVI integrals, statistical significance, and"
#~ " other shared code. The code for "
#~ "this module is available in the "
#~ "`landdegradation "
#~ "<https://github.com/ConservationInternational/landdegradation>`_ "
#~ "repository on GitHub."
#~ msgstr ""
#~ "QGIS插件由一些不同的Python脚本支持，这些脚本允许在谷歌地球引擎（GEE）上计算各种指标。这些脚本位于该GitHub资源库的 "
#~ "\"gee \"子文件夹中。GEE脚本由 \"landdegradation "
#~ "\"Python模块支持，该模块包括处理插件的输入和输出的代码，以及其他支持NDVI积分计算、统计意义和其他共享代码的通用功能。这个模块的代码可以在GitHub上的`landdegradation"
#~ " "
#~ "<https://github.com/ConservationInternational/landdegradation>`_软件仓库中找到。"

#~ msgid "iconCalculator"
#~ msgstr "iconCalculator"

#~ msgid "iconReports"
#~ msgstr "iconReports"

